<?php

declare(strict_types=1);

namespace App\Http\Livewire;

use App\Models\{{}};
use Livewire\Component;
use Livewire\WithPagination;

class {{}} extends Component
{
    use WithPagination;
    
    public $createModal = false;
    public $editModal = false;
    public $showModal = false;
    public $selectedModel;
    
    public function rules(): void
    {
        return [            
        ];
    }

    public function createModal()
    {
        $this->resetValidation();
        $this->createModal = true;
    }

    public function store()
    {
        try {
            
            $validatedData = $this->validate();

            $model = new Model();
            $model->fill($validatedData['model']);
            $model->save();

            session()->flash('success', '{{}} created successfully!');
            $this->createModal = false;

        } catch (\Exception $e) {

            session()->flash('error', $e->getMessage());

        }
    }

    public function editModal($id)
    {
        $this->selectedModel = Model::findOrFail($id);
        $this->editModal = true;
        
    }

    public function update()
    {
        try {

            $validatedData = $this->validate();

            $model = Model::findOrFail($this->selectedModel->id);
            $model->fill($validatedData['selectedModel']);
            $model->save();
            
            session()->flash('success', '{{}} updated successfully!');
            $this->editModal = false;

        } catch (\Exception $e) {
            
            session()->flash('error', $e->getMessage());

        }
    }
    
    public function delete($id)
    {
        DB::transaction(function () {
            $model = Model::findOrFail($id);
            $model->delete();
        });

        $this->deleteModal = false;
        session()->flash('success', 'Model deleted successfully!');
    }
    
    public function show($id)
    {
        $this->selectedModel = Model::findOrFail($id);
        $this->showModal = true;
    }
    
    public function get{{}}Property()
    {
    //  return {{}}::query()->paginate();
    }

    public function render()
    {
        return view('livewire.{{}}');
    }
}
