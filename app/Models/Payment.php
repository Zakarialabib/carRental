<?php
namespace App\Models;

use Illuminate\Database\Eloquent\Model;
use App\Modles\User;
use Illuminate\Support\Facades\DB;
use Illuminate\Support\Facades\Mail;
use App\Events\UpdatePlanRequest;
use App\Models\Plan;

class Payment extends Model
{
    
    protected $meta_json = null;

    public function save(array $options = [])
    {
        if (empty($this->code))
            $this->code = $this->generateCode();
        return parent::save($options); // TODO: Change the autogenerated stub
    }

    public function getStatusNameAttribute()
    {
        return booking_status_to_text($this->status);
    }

    public function getGatewayObjAttribute()
    {
        return $this->payment_gateway ? get_payment_gateway_obj($this->payment_gateway) : false;
    }

    public function generateCode()
    {
        return md5(uniqid() . rand(0, 99999));
    }

    public function sendUpdatedPurchaseEmail(){
    
            if (!empty(setting_item("plan_update_payment_admin_enable")) and !empty(setting_item("plan_update_payment_admin_subject")) and !empty(setting_item("plan_update_payment_admin_content"))) {
                Mail::to(setting_item('admin_email'))->send(new PlanPaymentEmail(false, $this, 'admin'));
            }

            if ($this->user) {
                if (!empty(setting_item("plan_update_payment_user_enable")) and !empty(setting_item("plan_update_payment_user_subject")) and !empty(setting_item("plan_update_payment_user_content"))) {
                    Mail::to($this->user->email)->send(new PlanPaymentEmail(false, $this, 'customer'));
                }
            }
        

    }

    public function sendNewPurchaseEmail(){

      
            $userRequest = $this->getMeta('user_request');

            if(!empty($userRequest)){
                $user = User::find($userRequest);
            }else{
                $user = $this->user;
            }

            if (!empty(setting_item("plan_new_payment_admin_enable")) and !empty(setting_item("plan_new_payment_admin_subject")) and !empty(setting_item("plan_new_payment_admin_content"))) {
                Mail::to(setting_item('admin_email'))->send(new PlanPaymentEmail(true, $this, 'admin'));
            }


            if ($user) {

                if (!empty(setting_item("plan_new_payment_user_enable")) and !empty(setting_item("plan_new_payment_user_subject")) and !empty(setting_item("plan_new_payment_user_content"))) {
                    Mail::to($user->email)->send(new PlanPaymentEmail(true, $this, 'customer'));
                }
            }
        
    }

}
